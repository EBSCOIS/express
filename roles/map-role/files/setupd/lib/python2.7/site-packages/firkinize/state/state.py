# Copyright (c) 2018 Platform9 systems. All rights reserved

from firkinize.configstore.consul import Consul
from uuid import uuid4
import logging
LOG = logging.getLogger(__name__)


def populate_db_specs(dbserver_id, svc_names):
    services = {}
    for service in svc_names:
        services[service] = {'dbserver_key': 'dbservers/%s' % dbserver_id}
    return services


def sync_to_consul(
        consul_url,
        customer_uuid,
        customer_shortname,
        region_uuid,
        certs,
        fqdn,
        admin_user,
        admin_password,
        admin_keystone_password,
        db_user,
        db_password,
        db_host,
        svc_names,
        db_port=3306,
        keystone_internal_uri='http://localhost:8080/keystone',
        keystone_admin_internal_uri='http://localhost:8080/keystone_admin',
        region_name='RegionOne',
):
    """
    Writes customer configuration and initial boostrap credentials to consul.
    TODO: add optional consul token parameter
    :param consul_url: consul url
    :param customer_uuid: customer uuid
    :param customer_shortname: customer short name
    :param region_uuid: region uuid
    :param certs: a dictionary with "current_version" and "vN" keys. The latter
           is a dictionary of { cert, key } entries.
    :param fqdn: main fqdn
    :param admin_user: administrator user name
    :param admin_password: administrator password
    :param admin_keystone_password: password for bootstrapping keystone
    :param db_user: mysql user
    :param db_password: mysql password
    :param db_host: mysql host name
    :param svc_names: service names to populate db spec entries in consul
    :param db_port: optional mysql port (defaults to 3306)
    :param keystone_internal_uri: optional keystone internal URI
    :param keystone_admin_internal_uri: optional keystone_admin internal URI
    :param region_name: optional region name, defaults to RegionOne
    :return the consul configuration URL and the db server UUID
    """
    consul = Consul(consul_url)
    # FIXME: the following should be passed in as an argument for consistency
    dbserver_id = str(uuid4())
    consul_tree = {
        'customers': {
            customer_uuid: {
                'fqdn': fqdn,
                'shortname': customer_shortname,
                'regions': {
                    region_uuid: {
                        'region_id': region_name,
                        'fqdn': fqdn,
                        'services': populate_db_specs(dbserver_id, svc_names),
                        'certs': certs,
                        'rabbit_broker': {
                            'host': 'localhost',
                            'port': 5673,
                        }
                    },
                },
                'keystone': {
                    'dbserver_key': 'dbservers/%s' % dbserver_id,
                    'bootstrap': {
                        'email': 'admin@platform9.net',
                        'password': admin_keystone_password,
                        'project': 'service',
                        'role': 'admin'
                        },
                    'uris': {
                        'keystone': keystone_internal_uri,
                        'keystone_admin': keystone_admin_internal_uri,
                    },
                    'users': {
                        'service_user': {
                            'email': admin_user,
                            'password': admin_password,
                            'project': 'service',
                            'role': 'admin'
                            }
                        }
                    }
                }
            },
        'dbservers': {
            dbserver_id: {
                'host': db_host,
                'port': db_port,
                'admin_user': db_user,
                'admin_pass': db_password
                }
            }
        }

    consul.kv_put_dict(consul_tree)
    return consul_url, dbserver_id
