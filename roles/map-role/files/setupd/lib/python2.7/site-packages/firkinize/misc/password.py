# Copyright (c) 2018 Platform9 systems. All rights reserved

import string
import random
import logging
import re

LOG = logging.getLogger(__name__)


def generate_random_password(length=16):
    vocab = string.ascii_letters + string.digits
    return "".join([random.choice(vocab) for _ in xrange(length)])


def generate_setupd_valid_password():
    """
    setupd requires that passwords contain at least one digit, one uppercase
    letter and one lowercase letter. pf9deploy's generate_random_password
    can sometimes violate this, so check it before using it.
    If we can't do it in less than 100 iterations, something is really wrong,
    so fail.
    FIXME: This code is pretty much copied from pf9_setup.py. We should pull
    it into a third place where it can be used by both - maybe in firkinize.
    """
    validation_regexes = [
        re.compile(r'[0-9]'),
        re.compile(r'[a-z]'),
        re.compile(r'[A-Z]')
    ]

    def _valid_password(passwd):
        if len(passwd) < 10:
            return False

        for pwd_rgx in validation_regexes:
            if not pwd_rgx.search(passwd):
                return False
        return True

    tries = 0
    while tries < 100:
        tries += 1
        passwd = generate_random_password()
        if _valid_password(passwd):
            LOG.info('Generated good password in %d attempt(s)', tries)
            return passwd
    raise RuntimeError('Failed to generate setupd acceptable password!')

