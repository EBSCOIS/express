# Copyright (c) 2018 Platform9 systems. All rights reserved

import logging
import time
from api import DeccoApi
from firkinize.k8s.constants import NON_PREEMPTIBLE_NODE_AFFINITY

LOG = logging.getLogger(__name__)


# Starts the mysql app in the specified namespace
def start_mysql(namespace, root_passwd):
    spec = {
        'initialReplicas': 1,
        'pod': {
            'affinity': NON_PREEMPTIBLE_NODE_AFFINITY,
            'containers': [
                {
                    'name': 'mysql',
                    'image': 'mysql',
                    'env': [
                        {
                            'name': 'MYSQL_ROOT_PASSWORD',
                            'value': root_passwd
                        }
                    ],
                    'ports': [
                        {
                            'containerPort': 3306,
                        }
                    ]
                }
            ],
        },
        'endpoints': [
            {
                'name': 'mysql',
                'verifyTcpClientCert': True,
                'port': 3306
            }
        ]
    }

    dapi = DeccoApi()
    for i in range(60):
        try:
            time.sleep(10)
            dapi.create_app('mysql', spec, namespace)
            LOG.info('successfully created mysql app')
            return
        except:
            LOG.info("failed to create mysql app, may retry...")
    raise Exception('failed to create mysql app')


