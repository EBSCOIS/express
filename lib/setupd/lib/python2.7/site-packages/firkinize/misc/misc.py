# Copyright (c) 2018 Platform9 systems. All rights reserved

import os
import requests
import logging
from retry import retry

LOG = logging.getLogger(__name__)


def get_aws_keys_from_env():
    aws_access_key = os.getenv('AWS_ACCESS_KEY')
    aws_secret_key = os.getenv('AWS_SECRET_KEY')
    if not aws_access_key or not aws_secret_key:
        raise Exception('AWS credentials are required to pull from ECR')
    return aws_access_key, aws_secret_key


def get_container_images_file_path_from_env():
    container_images_yaml_file = os.getenv('CONTAINER_IMAGES_YAML_FILE')
    if not container_images_yaml_file:
        raise RuntimeError('CONTAINER_IMAGES_YAML_FILE undefined')
    return container_images_yaml_file


def get_registry_url_from_env():
    registry_url = os.getenv('REGISTRY_URL')
    if not registry_url:
        raise Exception('REGISTRY_URL undefined')
    return registry_url


@retry(log=LOG, max_wait=420, interval=10)
def wait_url_returns_expected_statuses(url, allowed_status_codes):
    resp = requests.get(url)
    return resp.status_code in allowed_status_codes
