from backports.ssl_match_hostname import match_hostname
import json
import logging

from requests import HTTPError
from requests.packages.urllib3 import connection

# See IAAS-6208 for details of why the SSL backport is needed
connection.match_hostname = match_hostname

log = logging.getLogger(__name__)


def make_req(session, endpoint, method, body):
    resp = session.request(method, endpoint, json=body, verify=False)

    try:
        resp.raise_for_status()
        log.debug('%s %s - %s', method, endpoint, resp.status_code)
    except HTTPError as error:
        log.debug('HTTP Error. Full response text: %s', error.response.text)
        raise error
    _log_req_and_resp(resp)
    return resp


def _log_req_and_resp(resp):
    try:
        req_body = json.dumps(json.loads(resp.request.body), indent=4)
    except (ValueError, TypeError):
        req_body = resp.request.body
    try:
        resp_body = json.dumps(resp.json(), indent=4)
    except (ValueError, TypeError):
        resp_body = resp.text

    msg = '\n'.join(['HTTP Session log',
                     '------- Request: -------',
                     req_body,
                     '------- Response: ------',
                     resp_body])
    log.debug(msg)
