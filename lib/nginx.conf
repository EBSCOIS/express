#user awx;

worker_processes  1;

pid        /tmp/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    sendfile        on;
    #tcp_nopush     on;
    #gzip  on;

    upstream uwsgi {
        server 127.0.0.1:8050;
        }

    upstream daphne {
        server 127.0.0.1:8051;
    }

    server {
        listen 8052 default_server;

        # If you have a domain name, this is where to add it
        server_name _;
        keepalive_timeout 65;

        # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
        add_header Strict-Transport-Security max-age=15768000;
        location /nginx_status {
          stub_status on;
          access_log off;
          allow 127.0.0.1;
          deny all;
        }
        
        location /static/ {
            alias /var/lib/awx/public/static/;
        }

        location /favicon.ico { alias /var/lib/awx/public/static/favicon.ico; }

        location /websocket {
            # Pass request to the upstream alias
            proxy_pass http://daphne;
            # Require http version 1.1 to allow for upgrade requests
            proxy_http_version 1.1;
            # We want proxy_buffering off for proxying to websockets.
            proxy_buffering off;
            # http://en.wikipedia.org/wiki/X-Forwarded-For
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # enable this if you use HTTPS:
            proxy_set_header X-Forwarded-Proto https;
            # pass the Host: header from the client for the sake of redirects
            proxy_set_header Host $http_host;
            # We've set the Host header, so we don't need Nginx to muddle
            # about with redirects
            proxy_redirect off;
            # Depending on the request value, set the Upgrade and
            # connection headers
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        location / {
            if ($request_method = OPTIONS ) {
              add_header Access-Control-Allow-Origin "*";
              add_header Access-Control-Allow-Methods "POST, PUT, GET, OPTIONS";
              add_header Access-Control-Allow-Credentials "true";
              add_header Access-Control-Allow-Headers "Accept,Accept-Encoding,Accept-Language,Connection,Cookie,Host,Pragma,Upgrade-Insecure-Requests,User-Agent,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With";
              return 200;
            }

            if ($request_method = GET ) {
              add_header Access-Control-Allow-Origin "*";
              add_header Access-Control-Allow-Methods "GET";
              add_header Access-Control-Allow-Credentials "true";
              add_header Access-Control-Allow-Headers "Accept,Accept-Encoding,Accept-Language,Connection,Cookie,Host,Pragma,Upgrade-Insecure-Requests,User-Agent,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With";
            }

            if ($request_method = PUT ) {
              add_header Access-Control-Allow-Origin "*";
              add_header Access-Control-Allow-Methods "PUT";
              add_header Access-Control-Allow-Credentials "true";
              add_header Access-Control-Allow-Headers "Accept,Accept-Encoding,Accept-Language,Connection,Cookie,Host,Pragma,Upgrade-Insecure-Requests,User-Agent,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With";
            }

            if ($request_method = POST ) {
              add_header Access-Control-Allow-Origin "*";
              add_header Access-Control-Allow-Methods "POST";
              add_header Access-Control-Allow-Credentials "true";
              add_header Access-Control-Allow-Headers "Accept,Accept-Encoding,Accept-Language,Connection,Cookie,Host,Pragma,Upgrade-Insecure-Requests,User-Agent,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With";
            }

            # Add trailing / if missing
            rewrite ^(.*)$http_host(.*[^/])$ $1$http_host$2/ permanent;
            uwsgi_read_timeout 120s;
            uwsgi_pass uwsgi;
            include /etc/nginx/uwsgi_params;
        }
    }
}
